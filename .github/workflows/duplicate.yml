# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run CucumberJava Tests
on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ main, dev ]
  workflow_dispatch:
    # inputs:
    #   environment:
    #     description: ' env we wanted to run '
    #     type: choice
    #     options:
    #        - main
    #        - dev
    #        - stag
    #        - qa
    #        - prod
    #   script_name:
    #     description: ' test script wanted to execute '
    #     required: true
    #     type: choice
    #     default: 'loginPage'
    #     options:
    #        - login
    #        - GoogleSearch
    #        - resultsPage
    #        - addCart
      
jobs:
  build:
    runs-on: ubuntu-latest
    # environment: ${{ github.event.inputs.environment }}
    # container:
    #   image: ghcr.io/strongarm-tech/satbuildmachine:latest
    #   credentials:
          # username: ${{ github.actor }}
          # password: ${{ secrets.GITTOKEN }}
       
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11' 

      - name: Build with Maven
        run: mvn clean install
    
      - name: Run Cucumber Tests
        env: 
            USERNAME : ${{ secrets.USERNAME }}
            PASSWORD : ${{ secrets.PASSWORD }}
        run: mvn test



    # - name: run behave file
    #   env:
    #     QA_CRED_EMAIL : ${{ secrets.QA_CRED_EMAIL }}
    #     QA_CRED_PASS : ${{ secrets.QA_CRED_PASS }}
    #     DEV3_CRED_EMAIL : ${{ secrets.DEV3_CRED_EMAIL }}
    #     DEV3_CRED_PASS : ${{ secrets.DEV3_CRED_PASS }}
    #   run: |
    #         cd Tests
    #         case ${{ github.event.inputs.env_name }} in  
    #         dev3)
    #         behave -i dev3.feature
    #         ;;
    #         qa)
    #         behave -i qa.feature
    #         ;;
    #         esac


    
